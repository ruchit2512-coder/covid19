{
	"name": "df_hospital_admission",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_hospital_admission",
						"type": "DatasetReference"
					},
					"name": "sourcehospitaladmission"
				},
				{
					"dataset": {
						"referenceName": "countrylookup",
						"type": "DatasetReference"
					},
					"name": "lookupsource"
				},
				{
					"dataset": {
						"referenceName": "ds_dim_date",
						"type": "DatasetReference"
					},
					"name": "sourcedimdate"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_processed_weekly",
						"type": "DatasetReference"
					},
					"name": "sinkweekly"
				},
				{
					"dataset": {
						"referenceName": "ds_processed_daily",
						"type": "DatasetReference"
					},
					"name": "sinkdaily"
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "lookupcountry"
				},
				{
					"name": "selectrequiredfield"
				},
				{
					"name": "splitbyweekanddaily"
				},
				{
					"name": "derivedColumn"
				},
				{
					"name": "aggregatedimdate"
				},
				{
					"name": "joinondate"
				},
				{
					"name": "pivotonweekly"
				},
				{
					"name": "pivotondaily"
				},
				{
					"name": "sortweekly"
				},
				{
					"name": "sortdaily"
				},
				{
					"name": "selectweeklyfinal"
				},
				{
					"name": "selectdaily"
				}
			],
			"scriptLines": [
				"source(output(",
				"          country as string,",
				"          indicator as string,",
				"          date as date,",
				"          year_week as string,",
				"          value as double,",
				"          source as string,",
				"          url as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> sourcehospitaladmission",
				"source(output(",
				"          country as string,",
				"          country_code_2_digit as string,",
				"          country_code_3_digit as string,",
				"          continent as string,",
				"          population as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> lookupsource",
				"source(output(",
				"          date_key as date,",
				"          date as date,",
				"          year as string,",
				"          month as short,",
				"          day as short,",
				"          day_name as string,",
				"          day_of_year as short,",
				"          week_of_month as short,",
				"          week_of_year as string,",
				"          month_name as string,",
				"          year_month as integer,",
				"          year_week as short",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> sourcedimdate",
				"sourcehospitaladmission select(mapColumn(",
				"          country,",
				"          indicator,",
				"          reported_date = date,",
				"          reported_year_week = year_week,",
				"          value,",
				"          source",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1, lookupsource lookup(select1@country == lookupsource@country,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookupcountry",
				"lookupcountry select(mapColumn(",
				"          country = select1@country,",
				"          indicator,",
				"          reported_date,",
				"          reported_year_week,",
				"          value,",
				"          source,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectrequiredfield",
				"selectrequiredfield split(indicator == 'Weekly new hospital admissions per 100k' || indicator == 'Weekly new ICU admissions per 100k',",
				"     disjoint: false) ~> splitbyweekanddaily@(weekly, daily)",
				"sourcedimdate derive(ecdc_year_week = year + '-W' + lpad(week_of_year,2,'0')) ~> derivedColumn",
				"derivedColumn aggregate(groupBy(ecdc_year_week),",
				"     week_start_date = min(date),",
				"          week_end_date = max(date)) ~> aggregatedimdate",
				"splitbyweekanddaily@weekly, aggregatedimdate join(reported_year_week == ecdc_year_week,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinondate",
				"joinondate pivot(groupBy(country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population,",
				"          reported_year_week,",
				"          week_start_date,",
				"          week_end_date,",
				"          source),",
				"     pivotBy(indicator, ['Weekly  new hospital admissions per 100k', 'Weekly  new ICU admissions per 100k']),",
				"     count = sum(value),",
				"     columnNaming: '$N-$V',",
				"     lateral: true) ~> pivotonweekly",
				"splitbyweekanddaily@daily pivot(groupBy(country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population,",
				"          reported_date,",
				"          source),",
				"     pivotBy(indicator, ['Daily hospital occupancy', 'Daily ICU occupancy']),",
				"     count = sum(value),",
				"     columnNaming: '$V_$N',",
				"     lateral: true) ~> pivotondaily",
				"pivotonweekly sort(desc(reported_year_week, true),",
				"     asc(country, true)) ~> sortweekly",
				"pivotondaily sort(desc(reported_date, true),",
				"     asc(country, true)) ~> sortdaily",
				"sortweekly select(mapColumn(",
				"          country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population,",
				"          reported_year_week,",
				"          reported_week_start_date = week_start_date,",
				"          reported_week_end_date = week_end_date,",
				"          hospital_admissions_count = {count-Weekly  new hospital admissions per 100k},",
				"          icu_admissions_count = {count-Weekly  new ICU admissions per 100k},",
				"          source",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectweeklyfinal",
				"sortdaily select(mapColumn(",
				"          country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population,",
				"          reported_date,",
				"          hospital_occupancy_count = {Daily hospital occupancy_count},",
				"          icu_occupancy_count = {Daily ICU occupancy_count},",
				"          source",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectdaily",
				"selectweeklyfinal sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['hospital-admissions-weekly'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sinkweekly",
				"selectdaily sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['hospital-admissions-daily'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sinkdaily"
			]
		}
	}
}