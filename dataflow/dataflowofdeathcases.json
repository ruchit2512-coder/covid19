{
	"name": "dataflowofdeathcases",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "deathcasesdt",
						"type": "DatasetReference"
					},
					"name": "sourcedeathcases"
				},
				{
					"dataset": {
						"referenceName": "countrylookup",
						"type": "DatasetReference"
					},
					"name": "countrylookup"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "processeddata",
						"type": "DatasetReference"
					},
					"name": "casesanddeathsink"
				}
			],
			"transformations": [
				{
					"name": "filtereuropeonly"
				},
				{
					"name": "selectonlyrequiredcolumn"
				},
				{
					"name": "pivotdeathcases"
				},
				{
					"name": "lookupcountry"
				},
				{
					"name": "selectsink"
				}
			],
			"scriptLines": [
				"source(output(",
				"          country as string,",
				"          country_code as string,",
				"          continent as string,",
				"          population as integer,",
				"          indicator as string,",
				"          daily_count as integer,",
				"          date as date,",
				"          rate_14_day as string,",
				"          source as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> sourcedeathcases",
				"source(output(",
				"          country as string,",
				"          country_code_2_digit as string,",
				"          country_code_3_digit as string,",
				"          continent as string,",
				"          population as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> countrylookup",
				"sourcedeathcases filter(continent == 'Europe' && not(isNull(country_code))) ~> filtereuropeonly",
				"filtereuropeonly select(mapColumn(",
				"          country,",
				"          country_code,",
				"          population,",
				"          indicator,",
				"          daily_count,",
				"          source,",
				"          each(match(name == 'date'),",
				"               'reported'+'_date' = $$)",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectonlyrequiredcolumn",
				"selectonlyrequiredcolumn pivot(groupBy(country,",
				"          country_code,",
				"          population,",
				"          source,",
				"          reported_date),",
				"     pivotBy(indicator, ['confirmed cases', 'deaths']),",
				"     count = sum(daily_count),",
				"     columnNaming: '$V_$N',",
				"     lateral: true) ~> pivotdeathcases",
				"pivotdeathcases, countrylookup lookup(pivotdeathcases@country == countrylookup@country,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookupcountry",
				"lookupcountry select(mapColumn(",
				"          country = pivotdeathcases@country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population = pivotdeathcases@population,",
				"          {confirmed cases_count},",
				"          deaths_count,",
				"          reported_date,",
				"          source",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectsink",
				"selectsink sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> casesanddeathsink"
			]
		}
	}
}